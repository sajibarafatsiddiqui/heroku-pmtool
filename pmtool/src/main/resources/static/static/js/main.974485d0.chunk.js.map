{"version":3,"sources":["logo.svg","actions/createProject.js","actions/types/errorType.js","components/projects/ProjectItems.js","components/projects/CreateButton.js","components/Dashboard.js","securityUtils/setToken.js","actions/userManagement.js","components/layout/Navbar.js","components/projects/AddProject.js","reducer/errorReducer.js","reducer/projectReducer.js","reducer/projectTaskReducer.js","reducer/securityReducer.js","reducer/index.js","store.js","components/projects/UpdateProject.js","components/projects/projectboard/ProjectTask.js","actions/ProjectTaskActions.js","components/projects/projectboard/ProjectTasks.js","components/projects/projectboard/AddProjectTask.js","components/projects/projectboard/ProjectBoard.js","components/projects/projectboard/updateProjectTask.js","components/layout/Landing.js","components/usermanagement/Signup.js","components/usermanagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItems","onDelete","id","props","deleteProject","this","className","projectName","projectDescription","to","projectIdentifier","onClick","bind","Component","connect","window","confirm","delete","CreateButton","Fragment","Dashboard","componentDidMount","getProject","projects","map","key","prototypes","PropTypes","object","isRequired","func","state","get","res","setToken","token","defaults","headers","common","console","log","logout","localStorage","removeItem","Navbar","location","href","security","verify","user","isNotAuthenticated","isAuthenticated","fullName","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","e","preventDefault","newProject","setState","target","name","value","nextProps","placeholder","initialState","projectReducers","action","filter","projectTasks","projectTask","booleanPayload","combineReducers","projectSequence","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","UpdateProject","match","params","updateProject","classnames","disabled","prevState","ProjectTask","sequence","deleteProjectTask","priorityCLass","priority","summary","acceptanceCriteria","propType","ProjectTasks","tasks","TO_DO","IN_PROGRESS","DONE","i","length","status","AddProjectTask","ComponentDidMount","dueDate","createProjectTasks","ProjectBoard","getProjectTasks","projectNotFound","role","board","create_date","getProjectTask","updatedProjectTask","updateProjectTask","patch","Landing","Signup","userName","password","confirmPassword","newUser","Login","loginObject","login","loginRequest","setItem","decoded_token","jwt_decode","component","otherprops","render","jwtToken","decode_token","time","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.974485d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, GET_DELETE } from \"./types/errorType\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.post(\"/api/project/\", project);\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\nexport const getProject = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const updateProject = (id,history) => async dispatch => {\r\n  const res = await axios.get(`/${id}`);\r\n  dispatch({\r\n    type: GET_PROJECT,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const deleteProject=(id)=> async dispatch=>\r\n{if(window.confirm(\"Are you sure to delete that project?\")){await axios.delete(`/${id}`);\r\ndispatch({type:GET_DELETE, payload:id})\r\n}}\r\n ","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const GET_DELETE = \"GET_DELETE\";\r\nexport const GET_PROJECTTASK = \"GET_PROJECTTASK\";\r\nexport const GET_PROJECTTASKS = \"GET_PROJECTTASKS\";\r\nexport const DELETE_PROJECTTASK = \"DELETE_PROJECTTASK\";\r\nexport const SECURITY_TOKEN=\"SECURITY_TOKEN\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteProject } from \"../../actions/createProject\";\r\nclass ProjectItems extends Component {\r\n  onDelete = id => this.props.deleteProject(id);\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">REACT</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.projectDescription}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectboard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDelete.bind(this, project.projectIdentifier)}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nProjectItems.propTypes = { deleteProject: PropTypes.func.isRequired };\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItems);\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CreateButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItems from \"./projects/ProjectItems\";\r\nimport CreateButton from \"./projects/CreateButton\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getProject } from \"../actions/createProject\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount = () => this.props.getProject();\r\n  render() {\r\n    const {projects} =this.props.project\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project=>{return <ProjectItems key={project.id} project={project}/>})}\r\n              \r\n          \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nDashboard.prototypes = {\r\n  projects: PropTypes.object.isRequired,\r\n  getProject: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ project: state.project });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject }\r\n)(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nexport const setToken = token => {\r\n \r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    console.log(\"security\");\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SECURITY_TOKEN } from \"./types/errorType\";\r\nimport { setToken } from \"../securityUtils/setToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const newUser = (user, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/\", user);\r\n    history.push(\"/login\");\r\n    dispatch({ type: GET_ERRORS, payload: {} });\r\n  } catch (err) {\r\n    dispatch({ type: GET_ERRORS, payload: err.response.data });\r\n  }\r\n};\r\n\r\nexport const login = loginRequest => async dispatch => {\r\n  try {\r\n    console.log(\"here it is\");\r\n    const res = await axios.post(\"/api/users/signin\", loginRequest);\r\n    const { token } = res.data;\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    setToken(token);\r\n    const decoded_token = jwt_decode(token);\r\n    dispatch({\r\n      type: SECURITY_TOKEN,\r\n      payload: decoded_token\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: GET_ERRORS, payload: err.response.data });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setToken(false);\r\n  dispatch({\r\n    type: SECURITY_TOKEN,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/userManagement\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass Navbar extends Component {\r\n\r\n  logout(){\r\n    this.props.logout();\r\n    window.location.href=\"/\"\r\n  }\r\n  \r\n  render() {\r\n\r\n    const {verify,user} =this.props.security;\r\n    const isNotAuthenticated=(\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/dashboard\">\r\n              Dashboard\r\n            </a>\r\n          </li>\r\n        </ul>\r\n  \r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/login\" className=\"nav-link\" href=\"login.html\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      )\r\n      const isAuthenticated=(\r\n        <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/dashboard\">\r\n                <i className=\"fas fa-user-circle mr-1\">{user.fullName}</i>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n    \r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link \" to=\"/\" onClick={this.logout.bind(this)}>\r\n                Logout\r\n              </Link>\r\n            </li>\r\n           \r\n          </ul>\r\n        </div>)\r\n  const headers=user && verify? isAuthenticated:isNotAuthenticated\r\n        \r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n        {headers}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nNavbar.propTypes={security:PropTypes.object.isRequired, logout:PropTypes.func.isRequired}\r\nconst mapStateToProps=state=>({security:state.security, })\r\nexport default connect (mapStateToProps, {logout})(Navbar)\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/createProject\";\r\nimport classnames from 'classnames'\r\n\r\nclass AddProject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      projectDescription: \"\",\r\n      start_date: \"\",\r\n      end_date:\"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      projectDescription: this.state.projectDescription,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({ errors: nextProps.errors });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"dispaly-4 text-center\">Create Project Form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"projectName\"\r\n                    placeholder=\"Project Name\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"projectIdentifier\"\r\n                    placeholder=\"Project Identifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"projectDescription\"\r\n                    placeholder=\"Project Description\"\r\n                    value={this.state.projectDescription}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h5>Start Date</h5>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h5>End Date</h5>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <button>Submit</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({ errors: state.errors });\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types/errorType\";\r\n\r\nconst initialState={};\r\n\r\nexport const errorReducer=(state=initialState,action)=>{\r\nswitch(action.type){\r\n    case GET_ERRORS:\r\n        return action.payload;\r\n    default:\r\n        return state;\r\n}\r\n}","import { GET_PROJECTS, GET_PROJECT, GET_DELETE } from \"../actions/types/errorType\";\r\n\r\nconst initialState = { project: {}, projects: [] };\r\n\r\nexport const projectReducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return { ...state, projects: action.payload };\r\n    case GET_PROJECT:\r\n        return { ...state, project: action.payload };\r\n    case GET_DELETE:\r\n      return {...state, projects:state.projects.filter(project=>project.projectIdentifier!==action.payload)}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_PROJECTTASK,\r\n  GET_PROJECTTASKS,\r\n  DELETE_PROJECTTASK\r\n} from \"../actions/types/errorType\";\r\n\r\nconst initialState = {\r\n  projectTasks: [],\r\n  projectTask: {}\r\n};\r\n\r\nexport const projectTaskReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PROJECTTASK:\r\n      return { ...state, projectTask: action.payload };\r\n    case GET_PROJECTTASKS:\r\n      return { ...state, projectTasks: action.payload };\r\n    case DELETE_PROJECTTASK:\r\n      return {\r\n        ...state,\r\n        projectTasks: state.projectTasks.filter(\r\n          projectTask => projectTask.projectSequence !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { SECURITY_TOKEN } from \"../actions/types/errorType\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  verify: false\r\n};\r\nconst booleanPayload = payload => {\r\n  if (payload) return true; \r\n  else return false;\r\n};\r\n\r\nexport const securityReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SECURITY_TOKEN:\r\n      return {\r\n        ...state,\r\n        verify: booleanPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { errorReducer } from \"./errorReducer\";\r\nimport { projectReducers } from \"./projectReducer\";\r\nimport { projectTaskReducer } from \"./projectTaskReducer\";\r\nimport { securityReducer } from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducers,\r\n  delete: projectReducers,\r\n  projectTasks: projectTaskReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducer\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nlet store;\r\n\r\n/*if (window.navigator.userAgent.includes(\"Chrome\")) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n*/\r\nstore= createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n          window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : f => f\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateProject } from \"../../actions/createProject\";\r\nimport { createProject } from \"../../actions/createProject\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      projectDescription: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      projectDescription: this.state.projectDescription,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n  componentDidMount = () => {\r\n    const { id } = this.props.match.params;\r\n    this.props.updateProject(id, this.props.history);\r\n  };\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  static getDerivedStateFromProps(props, prevState) {\r\n    if (props.project.id !== prevState.id) {\r\n      return {\r\n        ...prevState,\r\n        id: props.project.id,\r\n        projectName: props.project.projectName,\r\n        projectIdentifier: props.project.projectIdentifier,\r\n        projectDescription: props.project.projectDescription,\r\n        start_date: props.project.start_date,\r\n        end_date: props.project.end_date\r\n\r\n        /* this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      projectDescription,\r\n      start_date,\r\n      end_date\r\n    });*/\r\n      }\r\n    };\r\n      if (props.errors!==prevState.errors) {\r\n        return {...prevState,errors: props.errors };\r\n      };\r\n      return prevState;\r\n    \r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"dispaly-4 text-center\">Update Project Form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    name=\"projectName\"\r\n                    placeholder=\"Project Name\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"projectIdentifier\"\r\n                    placeholder=\"Project Identifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"projectDescription\"\r\n                    placeholder=\"Project Description\"\r\n                    value={this.state.projectDescription}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h5>Start Date</h5>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h5>Create Date</h5>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <button>Submit</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nUpdateProject.propTypes = {\r\n  updateProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  project: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  project: state.project.project\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateProject, createProject }\r\n)(UpdateProject);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProjectTask } from \"../../../actions/ProjectTaskActions\";\r\nimport PropTypes from 'prop-types';\r\nclass ProjectTask extends Component {\r\n\r\n  onDelete=(id,sequence)=>this.props.deleteProjectTask(id,sequence)\r\n  render() {\r\n    const { projectTask } = this.props;\r\n    const {projectIdentifier, projectSequence}=this.props.projectTask\r\n\r\n    let priorityCLass;\r\n    let priority;\r\n    if (projectTask.priority === 1) {\r\n      priorityCLass = \"bg-secondary\";\r\n      priority = \"Low\";\r\n    }\r\n    if (projectTask.priority === 2) {\r\n      priorityCLass = \"bg-warning\";\r\n      priority = \"Medium\";\r\n    }\r\n    if (projectTask.priority === 3) {\r\n      priorityCLass = \"bg-danger\";\r\n      priority = \"High\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-2 bg-light \">\r\n        <div\r\n          className={`card-header text-center font-weight-bold text-primary ${priorityCLass}`}\r\n        >\r\n          ID: {projectTask.projectSequence} -- {priority}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title text-center\">{projectTask.summary}</h5>\r\n          <p className=\"card-text text-truncate\">\r\n            {projectTask.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${projectTask.projectIdentifier}/${projectTask.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View/Update\r\n          </Link>\r\n          <button className=\"btn btn-danger ml-4\" onClick={this.onDelete.bind(this, projectIdentifier, projectSequence)}>Delete</button>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nProjectTask.propType={deleteProjectTask:PropTypes.func.isRequired}\r\nexport default connect(null,{deleteProjectTask}) (ProjectTask);\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTTASKS, GET_PROJECTTASK, DELETE_PROJECTTASK } from \"./types/errorType\";\r\n\r\nexport const createProjectTasks = (\r\n  history,\r\n  projectIdentifier,\r\n  projectTask\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(\r\n      `/${projectIdentifier}`,\r\n      projectTask\r\n    );\r\n\r\n    history.push(`/projectboard/${projectIdentifier}`);\r\n  } catch (err) {\r\n    dispatch({ type: GET_ERRORS, payload: err.res.data });\r\n  }\r\n};\r\n\r\nexport const getProjectTasks = projectIdentifier => async dispatch => {\r\n  try {\r\n  const res = await axios.get(\r\n    `/api/project/backlog/${projectIdentifier}`\r\n  );\r\n  \r\n    dispatch({ type: GET_PROJECTTASKS, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({ type: GET_ERRORS, payload: err.response.data });\r\n  }\r\n};\r\n\r\n\r\nexport const getProjectTask =(projectIdentifier,projectSequence,history)=>async dispatch =>{\r\n  try{\r\n    const res = await axios.get(\r\n      `/api/project/backlog/${projectIdentifier}/${projectSequence}`\r\n    );\r\n    dispatch({type:GET_PROJECTTASK,payload:res.data})\r\n  }\r\n  catch(err){\r\n\r\n  history.push('/dashboard');\r\n\r\n  }\r\n}\r\n\r\nexport const updateProjectTask =(projectIdentifier,projectSequence,updateProjectTask,history)=>async dispatch =>{\r\n  try{\r\n     await axios.patch(\r\n      `/api/project/backlog/${projectIdentifier}/${projectSequence}`,updateProjectTask\r\n    );\r\n    history.push(`/projectboard/${projectIdentifier}`);\r\n  }catch(err){\r\n    dispatch({ type: GET_ERRORS, payload: err.res.data });\r\n  }\r\n}\r\n\r\nexport const deleteProjectTask=(id,sequence)=> async dispatch=>\r\n{if(window.confirm(\"Are you sure to delete that project?\")){await axios.delete(`/api/project/backlog/${id}/${sequence}`);\r\ndispatch({type:DELETE_PROJECTTASK, payload:sequence})\r\n}}\r\n ","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProjectTask from \"./ProjectTask\";\r\nclass ProjectTasks extends Component {\r\n  render() {\r\n    const { projectTasks } = this.props;\r\n    const tasks = projectTasks.map(projectTask => (\r\n      <ProjectTask key={projectTask.id} projectTask={projectTask} />\r\n    ));\r\n\r\n    let TO_DO = [];\r\n    let IN_PROGRESS = [];\r\n    let DONE = [];\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      //projectTask[i]=ProjectTask\r\n      if (tasks[i].props.projectTask.status === \"TO_DO\") {\r\n        console.log(tasks[i]);\r\n        TO_DO.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.projectTask.status === \"IN_PROGRESS\") {\r\n        IN_PROGRESS.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.projectTask.status === \"DONE\") {\r\n        DONE.push(tasks[i]);\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>To Do</h3>\r\n              </div>\r\n            </div>\r\n            {TO_DO}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-warning text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {IN_PROGRESS}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {DONE}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ProjectTasks;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { projectTaskReducer } from \"../../../reducer/projectTaskReducer\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProjectTasks } from \"../../../actions/ProjectTaskActions\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //get_projectIdentifier from url\r\n    const { id } = this.props.match.params;\r\n    //state\r\n    this.state = {\r\n      summary: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      acceptanceCriteria: \"\",\r\n      errors: \"\",\r\n      projectIdentifier: id\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({ errors: nextProps.errors });\r\n  }\r\n  ComponentDidMount=(props)=>{\r\n    if (!props.security.verify){\r\n      window.location.href(\"/login\")\r\n    } \r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const projectTask = {\r\n      summary: this.state.summary,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      acceptanceCriteria: this.state.acceptanceCriteria\r\n    };\r\n    this.props.createProjectTasks(\r\n      this.props.history,\r\n      this.state.projectIdentifier,\r\n      projectTask\r\n    );\r\n  }\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 m-auto\">\r\n            <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n              Back to ProjectBoard\r\n            </Link>\r\n            <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n            <p className=\"lead text-center\">Project Name + Project Code</p>\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"summary\"\r\n                  className=\"form-control form-control-lg\"\r\n                  placeholder=\"Project Task Summary\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.summary}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  name=\"acceptanceCriteria\"\r\n                  className=\"form-control form-control-lg\"\r\n                  placeholder=\"Acceptance Criteria\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.acceptanceCriteria}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control form-control-lg\"\r\n                  name=\"dueDate\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.dueDate}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <select\r\n                  className=\"form-control form-control-lg\"\r\n                  name=\"priority\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.priority}\r\n                >\r\n                  <option value={0}>Select Priority</option>\r\n                  <option value={1}>Low</option>\r\n                  <option value={2}>Medium</option>\r\n                  <option value={3}>High</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <select\r\n                  className=\"form-control form-control-lg\"\r\n                  name=\"status\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.status}\r\n                >\r\n                  <option value=\"\">Select Status</option>\r\n                  <option value=\"TO_DO\">To Do</option>\r\n                  <option value=\"IN_PROGESS\">In Progress</option>\r\n                  <option value=\"DONE\">Done</option>\r\n                </select>\r\n              </div>\r\n              <input\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn--block mt-4\"\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAddProjectTask.propTypes = {\r\n  createProjectTasks: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security:state.security\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProjectTasks }\r\n)(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProjectTasks from \"./ProjectTasks\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjectTasks } from \"../../../actions/ProjectTaskActions\";\r\n\r\nimport AddProjectTask from \"./AddProjectTask\";\r\n\r\nclass ProjectBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { errors: {} };\r\n  }\r\n  componentDidMount(e) {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProjectTasks(id);\r\n  }\r\n  componentWillReceiveProps() {\r\n    this.setState({ errors: this.props.errors });\r\n  }\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { projectTasks } = this.props.projectTasks;\r\n    const { errors } = this.props;\r\n    let ProjectBoard;\r\n    const board = (projectTasks, errors) => {\r\n      if (projectTasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No task to show\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <ProjectTasks projectTasks={projectTasks} />;\r\n      }\r\n    };\r\n    ProjectBoard = board(projectTasks, errors);\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n\r\n        {ProjectBoard}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  projectTasks: state.projectTasks,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTasks }\r\n)(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { projectTaskReducer } from \"../../../reducer/projectTaskReducer\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/ProjectTaskActions\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //get_projectIdentifier from url\r\n    const { id, sequence } = this.props.match.params;\r\n    //state\r\n    this.state = {\r\n      id: \"\",\r\n      summary: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: null,\r\n      acceptanceCriteria: \"\",\r\n      create_date: null,\r\n      errors: \"\",\r\n      projectIdentifier: id,\r\n      projectSequence: sequence,\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    const { id, sequence } = this.props.match.params;\r\n    this.props.getProjectTask(id, sequence);\r\n\r\n    if (!this.props.security.verify) {\r\n      window.location.href = \"/login\";\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    const {\r\n      id,\r\n      summary,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      acceptanceCriteria,\r\n      create_date,\r\n      projectIdentifier,\r\n      projectSequence\r\n    } = nextProps.projectTask;\r\n    this.setState({\r\n      id,\r\n      summary,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      acceptanceCriteria,\r\n      create_date,\r\n      projectIdentifier,\r\n      projectSequence\r\n    });\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updatedProjectTask = {\r\n      id: this.state.id,\r\n      summary: this.state.summary,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      create_date: this.state.create_date,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      projectSequence: this.state.projectSequence\r\n    };\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      updatedProjectTask,\r\n      this.props.history\r\n    );\r\n    this.setState({ errors: this.state.errors });\r\n  }\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 m-auto\">\r\n            <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n              Back to ProjectBoard\r\n            </Link>\r\n            <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n            <p className=\"lead text-center\">Project Name + Project Code</p>\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"summary\"\r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.summary\r\n                  })}\r\n                  placeholder=\"Project Task Summary\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.summary}\r\n                />\r\n                {errors.summary && (\r\n                  <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  name=\"acceptanceCriteria\"\r\n                  className=\"form-control form-control-lg\"\r\n                  placeholder=\"Acceptance Criteria\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.acceptanceCriteria}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control form-control-lg\"\r\n                  name=\"dueDate\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.dueDate}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <select\r\n                  className=\"form-control form-control-lg\"\r\n                  name=\"priority\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.priority}\r\n                >\r\n                  <option value={0}>Select Priority</option>\r\n                  <option value={1}>Low</option>\r\n                  <option value={2}>Medium</option>\r\n                  <option value={3}>High</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <select\r\n                  className=\"form-control form-control-lg\"\r\n                  name=\"status\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.status}\r\n                >\r\n                  <option value=\"\">Select Status</option>\r\n                  <option value=\"TO_DO\">To Do</option>\r\n                  <option value=\"IN_PROGESS\">In Progress</option>\r\n                  <option value=\"DONE\">Done</option>\r\n                </select>\r\n              </div>\r\n              <input\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn--block mt-4\"\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAddProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  updatesProjectTask: PropTypes.func.isRequired,\r\n  projectTask: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  projectTask: state.projectTasks.projectTask,\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, updateProjectTask }\r\n)(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner.text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">Project Management Tool</h1>\r\n                <p className=\"lead\">\r\n                Create account to record and follow up your project\r\n                </p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Landing;\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\"\r\nimport { newUser } from '../../actions/userManagement';\r\n\r\n\r\nclass Signup extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n                userName:\"\",\r\n                fullName:\"\",\r\n                password:\"\",\r\n                confirmPassword:\"\",\r\n                errors:{}\r\n            }\r\n            this.onChange=this.onChange.bind(this);\r\n            this.onSubmit=this.onSubmit.bind(this);\r\n\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        const user={\r\n            userName: this.state.userName,\r\n            fullName:this.state.fullName,\r\n            password:this.state.password,\r\n            confirmPassword:this.state.confirmPassword\r\n        }\r\n\r\n        this.props.newUser(user,this.props.history);\r\n\r\n    }\r\n\r\n    onChange(e){this.setState({[e.target.name]:e.target.value})}\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({errors:nextProps.errors})\r\n    }\r\n    render() {\r\n        const {errors}=this.props\r\n        return (\r\n        <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">Create your account</p>\r\n                            <form onSubmit={this.onSubmit} >\r\n                                \r\n                                \r\n                                <div className=\"form-group\">\r\n                                    <input type=\"email\" \r\n                                    className={classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.userName})}\r\n                                    placeholder=\"Email Address\"\r\n                                    name=\"userName\"\r\n                                    value={this.state.userName}\r\n                                    onChange={this.onChange}\r\n                                       \r\n                                    />\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" \r\n                                    className={classnames(\"form-control form-control lg\",{\"is-valid\":errors.fullName})}\r\n                                     name=\"fullName\"\r\n                                     placeholder=\"Full Name\"\r\n                                     value={this.state.fullName}\r\n                                     onChange={this.onChange}\r\n                                       \r\n                                    />\r\n                                    {errors.fullName && (<div className=\"invalid-feedback\">{errors.fullName}</div>)}\r\n                                    </div>\r\n                                   \r\n\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" \r\n                                    className={classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.password})}\r\n                                     name=\"password\"\r\n                                     value={this.state.password}\r\n                                    onChange={this.onChange} \r\n                                    \r\n                                     \r\n                                    />\r\n                                    {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" \r\n                                    className={classnames(\"form-control form-control lg\",{\"is-valid\":errors.confirmPassword})}\r\n                                     name=\"confirmPassword\" \r\n                                     value={this.state.confirmPassword}\r\n                                    onChange={this.onChange}\r\n                                       \r\n                                    />\r\n                                     {errors.confirmPassword && <div className=\"invalid-feedback\">{errors.confirmPassword}</div>}\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Submit\" className=\"btn btn-info btn-block mt-4\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n            \r\n        )\r\n    }\r\n}\r\nSignup.propTypes={\r\n    newUser:PropTypes.func.isRequired,\r\n    errors:PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps=(state)=>({errors:state.errors})\r\nexport default connect(mapStateToProps,{newUser})(Signup);\r\n","import React, { Component } from \"react\";\r\nimport Proptypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/userManagement\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      userName: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onChange(e) {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const loginObject = {\r\n      userName: this.state.userName,\r\n      password: this.state.password\r\n    };\r\n    console.log(\"onSubmit\");\r\n    this.props.login(loginObject);\r\n  }\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps.security.verify) {\r\n      return nextProps.history.push(\"/dashboard\");\r\n    } else {\r\n      return null;\r\n    }\r\n    if (nextProps.errors != prevState.errors) {\r\n      return { errors: nextProps.errors };\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n \r\n  render() {\r\n    const { errors } = this.props;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.userName\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"userName\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.userName}\r\n                  />\r\n                  {errors.userName && (\r\n                    <div className=\"invalid-feedback\">{errors.userName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    name=\"password\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.password}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Submit\"\r\n                  className=\"btn btn-info btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  errors: Proptypes.object.isRequired,\r\n  login: Proptypes.func.isRequired,\r\n  security: Proptypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import { connect } from \"react-redux\";\r\nimport { securityReducer } from \"../reducer/securityReducer\";\r\nimport { logout, login } from \"../actions/userManagement\";\r\nimport React, { Component } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst SecureRoute = ({ component: Component, security, ...otherprops }) => (\r\n  <Route\r\n    {...otherprops}\r\n    render={props =>\r\n      security.verify === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({ security: state.security });\r\nexport default connect(mapStateToProps)(SecureRoute);\r\n","import React, { Component } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from \"./components/projects/AddProject\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport UpdateProject from \"./components/projects/UpdateProject\";\r\nimport ProjectBoard from \"./components/projects/projectboard/ProjectBoard\";\r\nimport AddProjectTask from \"./components/projects/projectboard/AddProjectTask\";\r\nimport updateProjectTask from \"./components/projects/projectboard/updateProjectTask\";\r\nimport Landing from \"./components/layout/Landing\";\r\nimport Signup from \"./components/usermanagement/Signup\";\r\nimport Login from \"./components/usermanagement/Login\";\r\nimport { setToken } from \"./securityUtils/setToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { SECURITY_TOKEN } from \"./actions/types/errorType\";\r\nimport { logout } from \"./actions/userManagement\";\r\nimport SecureRoute from \"./securityUtils/SecureRoute\";\r\n\r\nconst jwtToken = localStorage.jwtToken;\r\nif (jwtToken) {\r\n  setToken(jwtToken);\r\n  const decode_token = jwt_decode(jwtToken);\r\n\r\n  store.dispatch({\r\n    type: SECURITY_TOKEN,\r\n    payload: decode_token\r\n  });\r\n  const time = Date.now() / 1000;\r\n  console.log(time);\r\n  if (decode_token.exp < time) {\r\n    store.dispatch(logout());\r\n    window.location.href(\"\"); \r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Navbar />\r\n\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/register\" component={Signup} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Switch>\r\n              <SecureRoute exact path=\"/dashboard\" component={Dashboard} />\r\n              <SecureRoute exact path=\"/addProject\" component={AddProject} />\r\n              <SecureRoute\r\n                exact\r\n                path=\"/updateProject/:id\"\r\n                component={UpdateProject}\r\n              />\r\n              <SecureRoute\r\n                exact\r\n                path=\"/projectboard/:id\"\r\n                component={ProjectBoard}\r\n              />\r\n              <SecureRoute\r\n                exact\r\n                path=\"/addProjectTask/:id\"\r\n                component={AddProjectTask}\r\n              />\r\n              <SecureRoute\r\n                exact\r\n                path=\"/updateProjectTask/:id/:sequence\"\r\n                component={updateProjectTask}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}